
            [
                	{"Camera.getCameraEntity":{"prefix":"getCameraEntity","body":["getCameraEntity"],"description":"Get the ID of the entity that the camera is set to use the position and orientation from when it's in entity mode. You can\r    also get the entity ID using the <code>Camera.cameraEntity</code> property."}},
	{"Camera.setCameraEntity":{"prefix":"setCameraEntity","body":["setCameraEntity"],"description":"Set the entity that the camera should use the position and orientation from when it's in entity mode. You can also set the\r    entity using the <code>Camera.cameraEntity</code> property."}},
	{"MyAvatar":{"prefix":"MyAvatar","body":["MyAvatar"],"description":"Your avatar is your in-world representation of you. The MyAvatar API is used to manipulate the avatar.\rFor example, using the MyAvatar API you can customize the avatar's appearance, run custom avatar animations,\rchange the avatar's position within the domain, or manage the avatar's collisions with other objects.\rNOTE: MyAvatar extends Avatar and AvatarData, see those namespace for more properties/methods."}},
	{"MyAvatar.centerBody":{"prefix":"centerBody","body":["centerBody"],"description":"Moves and orients the avatar, such that it is directly underneath the HMD, with toes pointed forward."}},
	{"MyAvatar.clearIKJointLimitHistory":{"prefix":"clearIKJointLimitHistory","body":["clearIKJointLimitHistory"],"description":"The internal inverse-kinematics system maintains a record of which joints are \"locked\". Sometimes it is useful to forget this history, to prevent\rcontorted joints."}},
	{"MyAvatar.getDefaultEyePosition":{"prefix":"getDefaultEyePosition","body":["getDefaultEyePosition"],"description":"The default position in world coordinates of the point directly between the avatar's eyes"}},
	{"MyAvatar.overrideAnimation":{"prefix":"overrideAnimation","body":["overrideAnimation"],"description":"The avatar animation system includes a set of default animations along with rules for how those animations are blended\rtogether with procedural data (such as look at vectors, hand sensors etc.). overrideAnimation() is used to completely\roverride all motion from the default animation system (including inverse kinematics for hand and head controllers) and\rplay a specified animation.  To end this animation and restore the default animations, use MyAvatar.restoreAnimation."}},
	{"MyAvatar.restoreAnimation":{"prefix":"restoreAnimation","body":["restoreAnimation"],"description":"The avatar animation system includes a set of default animations along with rules for how those animations are blended together with\rprocedural data (such as look at vectors, hand sensors etc.). Playing your own custom animations will override the default animations.\rrestoreAnimation() is used to restore all motion from the default animation system including inverse kinematics for hand and head\rcontrollers. If you aren't currently playing an override animation, this function will have no effect."}},
	{"MyAvatar.getAnimatationRoles":{"prefix":"getAnimatationRoles","body":["getAnimatationRoles"],"description":"Each avatar has an avatar-animation.json file that defines which animations are used and how they are blended together with procedural data\r(such as look at vectors, hand sensors etc.). Each animation specified in the avatar-animation.json file is known as an animation role.\rAnimation roles map to easily understandable actions that the avatar can perform, such as \"idleStand\", \"idleTalk\", or \"walkFwd.\"\rgetAnimationRoles() is used get the list of animation roles defined in the avatar-animation.json."}},
	{"MyAvatar.overrideRoleAnimation":{"prefix":"overrideRoleAnimation","body":["overrideRoleAnimation"],"description":"Each avatar has an avatar-animation.json file that defines a set of animation roles. Animation roles map to easily understandable actions\rthat the avatar can perform, such as \"idleStand\", \"idleTalk\", or \"walkFwd\". To get the full list of roles, use getAnimationRoles().\rFor each role, the avatar-animation.json defines when the animation is used, the animation clip (.FBX) used, and how animations are blended\rtogether with procedural data (such as look at vectors, hand sensors etc.).\roverrideRoleAnimation() is used to change the animation clip (.FBX) associated with a specified animation role.\rNote: Hand roles only affect the hand. Other 'main' roles, like 'idleStand', 'idleTalk', 'takeoffStand' are full body."}},
	{"MyAvatar.restoreRoleAnimation":{"prefix":"restoreRoleAnimation","body":["restoreRoleAnimation"],"description":"Each avatar has an avatar-animation.json file that defines a set of animation roles. Animation roles map to easily understandable actions that\rthe avatar can perform, such as \"idleStand\", \"idleTalk\", or \"walkFwd\". To get the full list of roles, use getAnimationRoles(). For each role,\rthe avatar-animation.json defines when the animation is used, the animation clip (.FBX) used, and how animations are blended together with\rprocedural data (such as look at vectors, hand sensors etc.). You can change the animation clip (.FBX) associated with a specified animation\rrole using overrideRoleAnimation().\rrestoreRoleAnimation() is used to restore a specified animation role's default animation clip. If you have not specified an override animation\rfor the specified role, this function will have no effect."}},
	{"Clipboard":{"prefix":"Clipboard","body":["Clipboard"],"description":"The Clipboard API enables you to export and import entities to and from JSON files."}},
	{"Clipboard.getContentsDimensions":{"prefix":"getContentsDimensions","body":["getContentsDimensions"],"description":"Compute the extents of the contents held in the clipboard."}},
	{"Clipboard.getClipboardContentsLargestDimension":{"prefix":"getClipboardContentsLargestDimension","body":["getClipboardContentsLargestDimension"],"description":"Compute the largest dimension of the extents of the contents held in the clipboard."}},
	{"Clipboard.importEntities":{"prefix":"importEntities","body":["importEntities"],"description":"Import entities from a JSON file containing entity data into the clipboard.\rYou can generate a JSON file using {@link Clipboard.exportEntities}."}},
	{"Clipboard.exportEntities":{"prefix":"exportEntities","body":["exportEntities"],"description":"Export the entities specified to a JSON file."}},
	{"Clipboard.exportEntities":{"prefix":"exportEntities","body":["exportEntities"],"description":"Export the entities with centers within a cube to a JSON file."}},
	{"Clipboard.pasteEntities":{"prefix":"pasteEntities","body":["pasteEntities"],"description":"Paste the contents of the clipboard into the world."}},
	{"Menu":{"prefix":"Menu","body":["Menu"],"description":"The Menu API provides access to the menu that is displayed at the top of the window\ron a user's desktop and in the tablet when the \"MENU\" button is pressed.\r\r<p />\r\r<h3>Groupings</h3>\r\rA \"grouping\" provides a way to group a set of menus or menu items together so \rthat they can all be set visible or invisible as a group. \rThere are two available groups: <code>\"Advanced\"</code> and <code>\"Developer\"</code>.\rThese groupings can be toggled in the \"Settings\" menu.\rIf a menu item doesn't belong to a group it is always displayed."}},
	{"Menu.addMenu":{"prefix":"addMenu","body":["addMenu"],"description":"Add a new top-level menu."}},
	{"Menu.removeMenu":{"prefix":"removeMenu","body":["removeMenu"],"description":"Remove a top-level menu."}},
	{"Menu.menuExists":{"prefix":"menuExists","body":["menuExists"],"description":"Check whether a top-level menu exists."}},
	{"Menu.addSeparator":{"prefix":"addSeparator","body":["addSeparator"],"description":"Add a separator with an unclickable label below it. The separator will be placed at the bottom of the menu.\rIf you want to add a separator at a specific point in the menu, use {@link Menu.addMenuItem} with\r{@link Menu.MenuItemProperties} instead."}},
	{"Menu.removeSeparator":{"prefix":"removeSeparator","body":["removeSeparator"],"description":"Remove a separator from a menu."}},
	{"Menu.addMenuItem":{"prefix":"addMenuItem","body":["addMenuItem"],"description":"Add a new menu item to a menu."}},
	{"Menu.addMenuItem":{"prefix":"addMenuItem","body":["addMenuItem"],"description":"Add a new menu item to a menu. The new item is added at the end of the menu."}},
	{"Menu.removeMenuItem":{"prefix":"removeMenuItem","body":["removeMenuItem"],"description":"Remove a menu item from a menu."}},
	{"Menu.menuItemExists":{"prefix":"menuItemExists","body":["menuItemExists"],"description":"Check if a menu item exists."}},
	{"Menu.isOptionChecked":{"prefix":"isOptionChecked","body":["isOptionChecked"],"description":"Check whether a checkable menu item is checked."}},
	{"Menu.setIsOptionChecked":{"prefix":"setIsOptionChecked","body":["setIsOptionChecked"],"description":"Set a checkable menu item as checked or unchecked."}},
	{"Menu.triggerOption":{"prefix":"triggerOption","body":["triggerOption"],"description":"Trigger the menu item as if the user clicked on it."}},
	{"Menu.isMenuEnabled":{"prefix":"isMenuEnabled","body":["isMenuEnabled"],"description":"Check whether a menu or menu item is enabled. If disabled, the item is grayed out and unusable.\rMenus are enabled by default."}},
	{"Menu.setMenuEnabled":{"prefix":"setMenuEnabled","body":["setMenuEnabled"],"description":"Set a menu or menu item to be enabled or disabled. If disabled, the item is grayed out and unusable."}},
	{"Menu.menuItemEvent":{"prefix":"menuItemEvent","body":["menuItemEvent"],"description":"Triggered when a menu item is clicked (or triggered by {@link Menu.triggerOption})."}},
	{"Selection.getListNames":{"prefix":"getListNames","body":["getListNames"],"description":"Query the names of all the selection lists"}},
	{"Selection.removeListFromMap":{"prefix":"removeListFromMap","body":["removeListFromMap"],"description":"Removes a named selection from the list of selections."}},
	{"Selection.addToSelectedItemsList":{"prefix":"addToSelectedItemsList","body":["addToSelectedItemsList"],"description":"Add an item in a selection."}},
	{"Selection.removeFromSelectedItemsList":{"prefix":"removeFromSelectedItemsList","body":["removeFromSelectedItemsList"],"description":"Remove an item from a selection."}},
	{"Selection.clearSelectedItemsList":{"prefix":"clearSelectedItemsList","body":["clearSelectedItemsList"],"description":"Remove all items from a selection."}},
	{"Selection.printList":{"prefix":"printList","body":["printList"],"description":"Prints out the list of avatars, entities and overlays stored in a particular selection."}},
	{"Selection.getList":{"prefix":"getList","body":["getList"],"description":"Query the list of avatars, entities and overlays stored in a particular selection."}},
	{"Selection.getHighlightedListNames":{"prefix":"getHighlightedListNames","body":["getHighlightedListNames"],"description":"Query the names of the highlighted selection lists"}},
	{"Selection.enableListHighlight":{"prefix":"enableListHighlight","body":["enableListHighlight"],"description":"Enable highlighting for the named selection.\rIf the Selection doesn't exist, it will be created.\rAll objects in the list will be displayed with the highlight effect as specified from the highlightStyle.\rThe function can be called several times with different values in the style to modify it."}},
	{"Selection.disableListHighlight":{"prefix":"disableListHighlight","body":["disableListHighlight"],"description":"Disable highlighting for the named selection.\rIf the Selection doesn't exist or wasn't enabled for highliting then nothing happens simply returning false."}},
	{"Selection.getListHighlightStyle":{"prefix":"getListHighlightStyle","body":["getListHighlightStyle"],"description":"Query the highlight style values for the named selection.\rIf the Selection doesn't exist or hasn't been highlight enabled yet, it will return an empty object.\rOtherwise, the jsObject describes the highlight style properties:\r- outlineUnoccludedColor: {xColor} Color of the specified highlight region\r- outlineOccludedColor: {xColor} \"\r- fillUnoccludedColor: {xColor} \"\r- fillOccludedColor: {xColor} \"\r\r- outlineUnoccludedAlpha: {float} Alpha value ranging from 0.0 (not visible) to 1.0 (fully opaque) for the specified highlight region\r- outlineOccludedAlpha: {float} \"\r- fillUnoccludedAlpha: {float} \"\r- fillOccludedAlpha: {float} \"\r\r- outlineWidth: {float} width of the outline expressed in pixels\r- isOutlineSmooth: {bool} true to enable oultine smooth falloff"}},
	{"Window.MessageBoxButton":{"prefix":"MessageBoxButton","body":["MessageBoxButton"],"description":"<p>The buttons that may be included in a message box created by {@link Window.openMessageBox|openMessageBox} are defined by\rnumeric values:\r<table>\r  <thead>\r    <tr>\r      <th>Button</th>\r      <th>Value</th>\r      <th>Description</th>\r    </tr>\r  </thead>\r  <tbody>\r    <tr> <td><strong>NoButton</strong></td> <td><code>0x0</code></td> <td>An invalid button.</td> </tr>\r    <tr> <td><strong>Ok</strong></td> <td><code>0x400</code></td> <td>\"OK\"</td> </tr>\r    <tr> <td><strong>Save</strong></td> <td><code>0x800</code></td> <td>\"Save\"</td> </tr>\r    <tr> <td><strong>SaveAll</strong></td> <td><code>0x1000</code></td> <td>\"Save All\"</td> </tr>\r    <tr> <td><strong>Open</strong></td> <td><code>0x2000</code></td> <td>\"Open\"</td> </tr>\r    <tr> <td><strong>Yes</strong></td> <td><code>0x4000</code></td> <td>\"Yes\"</td> </tr>\r    <tr> <td><strong>YesToAll</strong></td> <td><code>0x8000</code></td> <td>\"Yes to All\"</td> </tr>\r    <tr> <td><strong>No</strong></td> <td><code>0x10000</code></td> <td>\"No\"</td> </tr>\r    <tr> <td><strong>NoToAll</strong></td> <td><code>0x20000</code></td> <td>\"No to All\"</td> </tr>\r    <tr> <td><strong>Abort</strong></td> <td><code>0x40000</code></td> <td>\"Abort\"</td> </tr>\r    <tr> <td><strong>Retry</strong></td> <td><code>0x80000</code></td> <td>\"Retry\"</td> </tr>\r    <tr> <td><strong>Ignore</strong></td> <td><code>0x100000</code></td> <td>\"Ignore\"</td> </tr>\r    <tr> <td><strong>Close</strong></td> <td><code>0x200000</code></td> <td>\"Close\"</td> </tr>\r    <tr> <td><strong>Cancel</strong></td> <td><code>0x400000</code></td> <td>\"Cancel\"</td> </tr>\r    <tr> <td><strong>Discard</strong></td> <td><code>0x800000</code></td> <td>\"Discard\" or \"Don't Save\"</td> </tr>\r    <tr> <td><strong>Help</strong></td> <td><code>0x1000000</code></td> <td>\"Help\"</td> </tr>\r    <tr> <td><strong>Apply</strong></td> <td><code>0x2000000</code></td> <td>\"Apply\"</td> </tr>\r    <tr> <td><strong>Reset</strong></td> <td><code>0x4000000</code></td> <td>\"Reset\"</td> </tr>\r    <tr> <td><strong>RestoreDefaults</strong></td> <td><code>0x8000000</code></td> <td>\"Restore Defaults\"</td> </tr>\r  </tbody>\r</table>"}},
	{"Window":{"prefix":"Window","body":["Window"],"description":"The Window API provides various facilities not covered elsewhere: window dimensions, window focus, normal or entity camera\rview, clipboard, announcements, user connections, common dialog boxes, snapshots, file import, domain changes, domain \rphysics."}},
	{"Window.hasFocus":{"prefix":"hasFocus","body":["hasFocus"],"description":"Check if the Interface window has focus."}},
	{"Window.setFocus":{"prefix":"setFocus","body":["setFocus"],"description":"Make the Interface window have focus."}},
	{"Window.raiseMainWindow":{"prefix":"raiseMainWindow","body":["raiseMainWindow"],"description":"Raise the Interface window if it is minimized, and give it focus."}},
	{"Window.alert":{"prefix":"alert","body":["alert"],"description":"Display a dialog with the specified message and an \"OK\" button. The dialog is non-modal; the script continues without\rwaiting for a user response."}},
	{"Window.confirm":{"prefix":"confirm","body":["confirm"],"description":"Prompt the user to confirm something. Displays a modal dialog with a message plus \"Yes\" and \"No\" buttons.\rresponds."}},
	{"Window.prompt":{"prefix":"prompt","body":["prompt"],"description":"Prompt the user to enter some text. Displays a modal dialog with a message and a text box, plus \"OK\" and \"Cancel\" \rbuttons."}},
	{"Window.promptAsync":{"prefix":"promptAsync","body":["promptAsync"],"description":"Prompt the user to enter some text. Displays a non-modal dialog with a message and a text box, plus \"OK\" and \"Cancel\" \rbuttons. A {@link Window.promptTextChanged|promptTextChanged} signal is emitted when the user OKs the dialog; no signal \ris emitted if the user cancels the dialog."}},
	{"Window.customPrompt":{"prefix":"customPrompt","body":["customPrompt"],"description":"Prompt the user for input in a custom, modal dialog."}},
	{"Window.browseDir":{"prefix":"browseDir","body":["browseDir"],"description":"Prompt the user to choose a directory. Displays a modal dialog that navigates the directory tree."}},
	{"Window.browseDirAsync":{"prefix":"browseDirAsync","body":["browseDirAsync"],"description":"Prompt the user to choose a directory. Displays a non-modal dialog that navigates the directory tree. A\r{@link Window.browseDirChanged|browseDirChanged} signal is emitted when a directory is chosen; no signal is emitted if\rthe user cancels the dialog."}},
	{"Window.browse":{"prefix":"browse","body":["browse"],"description":"Prompt the user to choose a file. Displays a modal dialog that navigates the directory tree."}},
	{"Window.browseAsync":{"prefix":"browseAsync","body":["browseAsync"],"description":"Prompt the user to choose a file. Displays a non-modal dialog that navigates the directory tree. A\r{@link Window.browseChanged|browseChanged} signal is emitted when a file is chosen; no signal is emitted if the user\rcancels the dialog."}},
	{"Window.save":{"prefix":"save","body":["save"],"description":"Prompt the user to specify the path and name of a file to save to. Displays a model dialog that navigates the directory\rtree and allows the user to type in a file name."}},
	{"Window.saveAsync":{"prefix":"saveAsync","body":["saveAsync"],"description":"Prompt the user to specify the path and name of a file to save to. Displays a non-model dialog that navigates the\rdirectory tree and allows the user to type in a file name. A {@link Window.saveFileChanged|saveFileChanged} signal is\remitted when a file is specified; no signal is emitted if the user cancels the dialog."}},
	{"Window.browseAssets":{"prefix":"browseAssets","body":["browseAssets"],"description":"Prompt the user to choose an Asset Server item. Displays a modal dialog that navigates the tree of assets on the Asset\rServer."}},
	{"Window.browseAssetsAsync":{"prefix":"browseAssetsAsync","body":["browseAssetsAsync"],"description":"Prompt the user to choose an Asset Server item. Displays a non-modal dialog that navigates the tree of assets on the \rAsset Server. A {@link Window.assetsDirChanged|assetsDirChanged} signal is emitted when an asset is chosen; no signal is\remitted if the user cancels the dialog."}},
	{"Window.showAssetServer":{"prefix":"showAssetServer","body":["showAssetServer"],"description":"Open the Asset Browser dialog. If a file to upload is specified, the user is prompted to enter the folder and name to\rmap the file to on the asset server."}},
	{"Window.checkVersion":{"prefix":"checkVersion","body":["checkVersion"],"description":"Get Interface's build number."}},
	{"Window.protocolSignature":{"prefix":"protocolSignature","body":["protocolSignature"],"description":"Get the signature for Interface's protocol version."}},
	{"Window.copyToClipboard":{"prefix":"copyToClipboard","body":["copyToClipboard"],"description":"Copies text to the operating system's clipboard."}},
	{"Window.takeSnapshot":{"prefix":"takeSnapshot","body":["takeSnapshot"],"description":"Takes a snapshot of the current Interface view from the primary camera. When a still image only is captured, \r{@link Window.stillSnapshotTaken|stillSnapshotTaken} is emitted; when a still image plus moving images are captured, \r{@link Window.processingGifStarted|processingGifStarted} and {@link Window.processingGifCompleted|processingGifCompleted}\rare emitted. The path to store the snapshots and the length of the animated GIF to capture are specified in Settings >\rGeneral > Snapshots."}},
	{"Window.takeSecondaryCameraSnapshot":{"prefix":"takeSecondaryCameraSnapshot","body":["takeSecondaryCameraSnapshot"],"description":"Takes a still snapshot of the current view from the secondary camera that can be set up through the {@link Render} API."}},
	{"Window.makeConnection":{"prefix":"makeConnection","body":["makeConnection"],"description":"Emit a {@link Window.connectionAdded|connectionAdded} or a {@link Window.connectionError|connectionError} signal that\rindicates whether or not a user connection was successfully made using the Web API."}},
	{"Window.displayAnnouncement":{"prefix":"displayAnnouncement","body":["displayAnnouncement"],"description":"Display a notification message. Notifications are displayed in panels by the default script, nofications.js. An\r{@link Window.announcement|announcement} signal is emitted when this function is called."}},
	{"Window.shareSnapshot":{"prefix":"shareSnapshot","body":["shareSnapshot"],"description":"Prepare a snapshot ready for sharing. A {@link Window.snapshotShared|snapshotShared} signal is emitted when the snapshot\rhas been prepared."}},
	{"Window.isPhysicsEnabled":{"prefix":"isPhysicsEnabled","body":["isPhysicsEnabled"],"description":"Check to see if physics is active for you in the domain you're visiting - there is a delay between your arrival at a\rdomain and physics becoming active for you in that domain."}},
	{"Window.setDisplayTexture":{"prefix":"setDisplayTexture","body":["setDisplayTexture"],"description":"Set what to show on the PC display: normal view or entity camera view. The entity camera is configured using\r{@link Camera.setCameraEntity} and {@link Camera|Camera.mode}."}},
	{"Window.DisplayTexture":{"prefix":"DisplayTexture","body":["DisplayTexture"],"description":"<p>The views that may be displayed on the PC display.</p>\r<table>\r  <thead>\r    <tr>\r      <th>Value</th>\r      <th>View Displayed</th>\r    </tr>\r  </thead>\r  <tbody>\r    <tr>\r      <td><code>\"\"</code></td>\r      <td>Normal view.</td>\r    </tr>\r    <tr>\r      <td><code>\"resource://spectatorCameraFrame\"</code></td>\r      <td>Entity camera view.</td>\r    </tr>\r  </tbody>\r</table>"}},
	{"Window.isPointOnDesktopWindow":{"prefix":"isPointOnDesktopWindow","body":["isPointOnDesktopWindow"],"description":"Check if a 2D point is within the desktop window if in desktop mode, or the drawable area of the HUD overlay if in HMD\rmode."}},
	{"Window.getDeviceSize":{"prefix":"getDeviceSize","body":["getDeviceSize"],"description":"Get the size of the drawable area of the Interface window if in desktop mode or the HMD rendering surface if in HMD mode."}},
	{"Window.openMessageBox":{"prefix":"openMessageBox","body":["openMessageBox"],"description":"Open a non-modal message box that can have a variety of button combinations. See also, \r{@link Window.updateMessageBox|updateMessageBox} and {@link Window.closeMessageBox|closeMessageBox}."}},
	{"Window.updateMessageBox":{"prefix":"updateMessageBox","body":["updateMessageBox"],"description":"Update the content of a message box that was opened with {@link Window.openMessageBox|openMessageBox}."}},
	{"Window.closeMessageBox":{"prefix":"closeMessageBox","body":["closeMessageBox"],"description":"Close a message box that was opened with {@link Window.openMessageBox|openMessageBox}."}},
	{"Window.domainChanged":{"prefix":"domainChanged","body":["domainChanged"],"description":"Triggered when you change the domain you're visiting. <strong>Warning:</strong> Is not emitted if you go to domain that \risn't running."}},
	{"Window.svoImportRequested":{"prefix":"svoImportRequested","body":["svoImportRequested"],"description":"Triggered when you try to navigate to a *.json, *.svo, or *.svo.json URL in a Web browser within Interface."}},
	{"Window.domainConnectionRefused":{"prefix":"domainConnectionRefused","body":["domainConnectionRefused"],"description":"Triggered when you try to visit a domain but are refused connection."}},
	{"Window.stillSnapshotTaken":{"prefix":"stillSnapshotTaken","body":["stillSnapshotTaken"],"description":"Triggered when a still snapshot has been taken by calling {@link Window.takeSnapshot|takeSnapshot} with \r    <code>includeAnimated = false</code> or {@link Window.takeSecondaryCameraSnapshot|takeSecondaryCameraSnapshot}."}},
	{"Window.snapshotShared":{"prefix":"snapshotShared","body":["snapshotShared"],"description":"Triggered when a snapshot submitted via {@link Window.shareSnapshot|shareSnapshot} is ready for sharing. The snapshot\rmay then be shared via the {@link Account.metaverseServerURL} Web API."}},
	{"Window.processingGifStarted":{"prefix":"processingGifStarted","body":["processingGifStarted"],"description":"Triggered when the snapshot images have been captured by {@link Window.takeSnapshot|takeSnapshot} and the GIF is\r    starting to be processed."}},
	{"Window.processingGifCompleted":{"prefix":"processingGifCompleted","body":["processingGifCompleted"],"description":"Triggered when a GIF has been prepared of the snapshot images captured by {@link Window.takeSnapshot|takeSnapshot}."}},
	{"Window.connectionAdded":{"prefix":"connectionAdded","body":["connectionAdded"],"description":"Triggered when you've successfully made a user connection."}},
	{"Window.connectionError":{"prefix":"connectionError","body":["connectionError"],"description":"Triggered when you failed to make a user connection."}},
	{"Window.announcement":{"prefix":"announcement","body":["announcement"],"description":"Triggered when a message is announced by {@link Window.displayAnnouncement|displayAnnouncement}."}},
	{"Window.messageBoxClosed":{"prefix":"messageBoxClosed","body":["messageBoxClosed"],"description":"Triggered when the user closes a message box that was opened with {@link Window.openMessageBox|openMessageBox}."}},
	{"Window.browseDirChanged":{"prefix":"browseDirChanged","body":["browseDirChanged"],"description":"Triggered when the user chooses a directory in a {@link Window.browseDirAsync|browseDirAsync} dialog."}},
	{"Window.assetsDirChanged":{"prefix":"assetsDirChanged","body":["assetsDirChanged"],"description":"Triggered when the user chooses an asset in a {@link Window.browseAssetsAsync|browseAssetsAsync} dialog."}},
	{"Window.saveFileChanged":{"prefix":"saveFileChanged","body":["saveFileChanged"],"description":"Triggered when the user specifies a file in a {@link Window.saveAsync|saveAsync} dialog."}},
	{"Window.browseChanged":{"prefix":"browseChanged","body":["browseChanged"],"description":"Triggered when the user chooses a file in a {@link Window.browseAsync|browseAsync} dialog."}},
	{"Window.openFileChanged":{"prefix":"openFileChanged","body":["openFileChanged"],"description":"Triggered when the user chooses a file in a {@link Window.browseAsync|browseAsync} dialog."}},
	{"Window.promptTextChanged":{"prefix":"promptTextChanged","body":["promptTextChanged"],"description":"Triggered when the user OKs a {@link Window.promptAsync|promptAsync} dialog."}},
	{"Window.geometryChanged":{"prefix":"geometryChanged","body":["geometryChanged"],"description":"Triggered when the position or size of the Interface window changes."}},
	{"Overlays.Circle3DProperties":{"prefix":"Circle3DProperties","body":["Circle3DProperties"],"description":"These are the properties of a <code>circle3d</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"ContextOverlay":{"prefix":"ContextOverlay","body":["ContextOverlay"]}},
	{"Overlays.CubeProperties":{"prefix":"CubeProperties","body":["CubeProperties"],"description":"These are the properties of a <code>cube</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.GridProperties":{"prefix":"GridProperties","body":["GridProperties"],"description":"These are the properties of a <code>grid</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.Image3DProperties":{"prefix":"Image3DProperties","body":["Image3DProperties"],"description":"These are the properties of an <code>image3d</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.ImageProperties":{"prefix":"ImageProperties","body":["ImageProperties"],"description":"These are the properties of an <code>image</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.Line3DProperties":{"prefix":"Line3DProperties","body":["Line3DProperties"],"description":"These are the properties of a <code>line3d</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.ModelProperties":{"prefix":"ModelProperties","body":["ModelProperties"],"description":"These are the properties of a <code>model</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.OverlayType":{"prefix":"OverlayType","body":["OverlayType"],"description":"<p>An overlay may be one of the following types:</p>\r<table>\r  <thead>\r    <tr><th>Value</th><th>2D/3D</th><th>Description</th></tr>\r  </thead>\r  <tbody>\r    <tr><td><code>circle3d</code></td><td>3D</td><td>A circle.</td></tr>\r    <tr><td><code>cube</code></td><td>3D</td><td>A cube. Can also use a <code>shape</code> overlay to create a \r    cube.</td></tr>\r    <tr><td><code>grid</code></td><td>3D</td><td>A grid of lines in a plane.</td></tr>\r    <tr><td><code>image</code></td><td>2D</td><td>An image. Synonym: <code>billboard</code>.</td></tr>\r    <tr><td><code>image3d</code></td><td>3D</td><td>An image.</td></tr>\r    <tr><td><code>line3d</code></td><td>3D</td><td>A line.</td></tr>\r    <tr><td><code>model</code></td><td>3D</td><td>A model.</td></tr>\r    <tr><td><code>rectangle</code></td><td>2D</td><td>A rectangle.</td></tr>\r    <tr><td><code>rectangle3d</code></td><td>3D</td><td>A rectangle.</td></tr>\r    <tr><td><code>shape</code></td><td>3D</td><td>A geometric shape, such as a cube, sphere, or cylinder.</td></tr>\r    <tr><td><code>sphere</code></td><td>3D</td><td>A sphere. Can also use a <code>shape</code> overlay to create a \r    sphere.</td></tr>\r    <tr><td><code>text</code></td><td>2D</td><td>Text.</td></tr>\r    <tr><td><code>text3d</code></td><td>3D</td><td>Text.</td></tr>\r    <tr><td><code>web3d</code></td><td>3D</td><td>Web content.</td></tr>\r  </tbody>\r</table>\r<p>2D overlays are rendered on the display surface in desktop mode and on the HUD surface in HMD mode. 3D overlays are\rrendered at a position and orientation in-world.<p>\r<p>Each overlay type has different {@link Overlays.OverlayProperties|OverlayProperties}.</p>"}},
	{"Overlays.OverlayProperties":{"prefix":"OverlayProperties","body":["OverlayProperties"],"description":"<p>Different overlay types have different properties:</p>\r<table>\r  <thead>\r    <tr><th>{@link Overlays.OverlayType|OverlayType}</th><th>Overlay Properties</th></tr>\r  </thead>\r  <tbody>\r    <tr><td><code>circle3d</code></td><td>{@link Overlays.Circle3DProperties|Circle3DProperties}</td></tr>\r    <tr><td><code>cube</code></td><td>{@link Overlays.CubeProperties|CubeProperties}</td></tr>\r    <tr><td><code>grid</code></td><td>{@link Overlays.GridProperties|GridProperties}</td></tr>\r    <tr><td><code>image</code></td><td>{@link Overlays.ImageProperties|ImageProperties}</td></tr>\r    <tr><td><code>image3d</code></td><td>{@link Overlays.Image3DProperties|Image3DProperties}</td></tr>\r    <tr><td><code>line3d</code></td><td>{@link Overlays.Line3DProperties|Line3DProperties}</td></tr>\r    <tr><td><code>model</code></td><td>{@link Overlays.ModelProperties|ModelProperties}</td></tr>\r    <tr><td><code>rectangle</code></td><td>{@link Overlays.RectangleProperties|RectangleProperties}</td></tr>\r    <tr><td><code>rectangle3d</code></td><td>{@link Overlays.Rectangle3DProperties|Rectangle3DProperties}</td></tr>\r    <tr><td><code>shape</code></td><td>{@link Overlays.ShapeProperties|ShapeProperties}</td></tr>\r    <tr><td><code>sphere</code></td><td>{@link Overlays.SphereProperties|SphereProperties}</td></tr>\r    <tr><td><code>text</code></td><td>{@link Overlays.TextProperties|TextProperties}</td></tr>\r    <tr><td><code>text3d</code></td><td>{@link Overlays.Text3DProperties|Text3DProperties}</td></tr>\r    <tr><td><code>web3d</code></td><td>{@link Overlays.Web3DProperties|Web3DProperties}</td></tr>\r  </tbody>\r</table>"}},
	{"Overlays.RayToOverlayIntersectionResult":{"prefix":"RayToOverlayIntersectionResult","body":["RayToOverlayIntersectionResult"]}},
	{"Overlays":{"prefix":"Overlays","body":["Overlays"],"description":"The Overlays API provides facilities to create and interact with overlays. Overlays are 2D and 3D objects visible only to\ryourself and that aren't persisted to the domain. They are used for UI."}},
	{"Overlays.addOverlay":{"prefix":"addOverlay","body":["addOverlay"],"description":"Add an overlay to the scene."}},
	{"Overlays.cloneOverlay":{"prefix":"cloneOverlay","body":["cloneOverlay"],"description":"Create a clone of an existing overlay."}},
	{"Overlays.editOverlay":{"prefix":"editOverlay","body":["editOverlay"],"description":"Edit an overlay's properties."}},
	{"Overlays.editOverlays":{"prefix":"editOverlays","body":["editOverlays"],"description":"Edit multiple overlays' properties."}},
	{"Overlays.deleteOverlay":{"prefix":"deleteOverlay","body":["deleteOverlay"],"description":"Delete an overlay."}},
	{"Overlays.getOverlayType":{"prefix":"getOverlayType","body":["getOverlayType"],"description":"Get the type of an overlay."}},
	{"Overlays.getOverlayObject":{"prefix":"getOverlayObject","body":["getOverlayObject"],"description":"Get the overlay script object."}},
	{"Overlays.getOverlayAtPoint":{"prefix":"getOverlayAtPoint","body":["getOverlayAtPoint"],"description":"Get the ID of the 2D overlay at a particular point on the screen or HUD."}},
	{"Overlays.getProperty":{"prefix":"getProperty","body":["getProperty"],"description":"Get the value of a 3D overlay's property."}},
	{"Overlays.getProperties":{"prefix":"getProperties","body":["getProperties"],"description":"Get the values of an overlay's properties."}},
	{"Overlays.getOverlaysProperties":{"prefix":"getOverlaysProperties","body":["getOverlaysProperties"],"description":"Get the values of multiple overlays' properties."}},
	{"Overlays.findRayIntersection":{"prefix":"findRayIntersection","body":["findRayIntersection"],"description":"Find the closest 3D overlay intersected by a {@link PickRay}."}},
	{"Overlays.findRayIntersectionVector":{"prefix":"findRayIntersectionVector","body":["findRayIntersectionVector"],"description":"Find the closest 3D overlay intersected by a {@link PickRay}."}},
	{"Overlays.findOverlays":{"prefix":"findOverlays","body":["findOverlays"],"description":"Return a list of 3D overlays with bounding boxes that touch a search sphere."}},
	{"Overlays.isLoaded":{"prefix":"isLoaded","body":["isLoaded"],"description":"Check whether an overlay's assets have been loaded. For example, for an <code>image</code> overlay the result indicates\rwhether its image has been loaded."}},
	{"Overlays.textSize":{"prefix":"textSize","body":["textSize"],"description":"Calculates the size of the given text in the specified overlay if it is a text overlay."}},
	{"Overlays.width":{"prefix":"width","body":["width"],"description":"Get the width of the window or HUD."}},
	{"Overlays.height":{"prefix":"height","body":["height"],"description":"Get the height of the window or HUD."}},
	{"Overlays.isAddedOverly":{"prefix":"isAddedOverly","body":["isAddedOverly"],"description":"Check if there is an overlay of a given ID."}},
	{"Overlays.sendMousePressOnOverlay":{"prefix":"sendMousePressOnOverlay","body":["sendMousePressOnOverlay"],"description":"Generate a mouse press event on an overlay."}},
	{"Overlays.sendMouseReleaseOnOverlay":{"prefix":"sendMouseReleaseOnOverlay","body":["sendMouseReleaseOnOverlay"],"description":"Generate a mouse release event on an overlay."}},
	{"Overlays.sendMouseMoveOnOverlay":{"prefix":"sendMouseMoveOnOverlay","body":["sendMouseMoveOnOverlay"],"description":"Generate a mouse move event on an overlay."}},
	{"Overlays.sendHoverEnterOverlay":{"prefix":"sendHoverEnterOverlay","body":["sendHoverEnterOverlay"],"description":"Generate a hover enter event on an overlay."}},
	{"Overlays.sendHoverOverOverlay":{"prefix":"sendHoverOverOverlay","body":["sendHoverOverOverlay"],"description":"Generate a hover over event on an overlay."}},
	{"Overlays.sendHoverLeaveOverlay":{"prefix":"sendHoverLeaveOverlay","body":["sendHoverLeaveOverlay"],"description":"Generate a hover leave event on an overlay."}},
	{"Overlays.getKeyboardFocusOverlay":{"prefix":"getKeyboardFocusOverlay","body":["getKeyboardFocusOverlay"],"description":"Get the ID of the Web3D overlay that has keyboard focus."}},
	{"Overlays.setKeyboardFocusOverlay":{"prefix":"setKeyboardFocusOverlay","body":["setKeyboardFocusOverlay"],"description":"Set the Web3D overlay that has keyboard focus."}},
	{"Overlays.overlayDeleted":{"prefix":"overlayDeleted","body":["overlayDeleted"],"description":"Triggered when an overlay is deleted."}},
	{"Overlays.mousePressOnOverlay":{"prefix":"mousePressOnOverlay","body":["mousePressOnOverlay"],"description":"Triggered when a mouse press event occurs on an overlay. Only occurs for 3D overlays (unless you use \r    {@link Overlays.sendMousePressOnOverlay|sendMousePressOnOverlay} for a 2D overlay)."}},
	{"Overlays.mouseDoublePressOnOverlay":{"prefix":"mouseDoublePressOnOverlay","body":["mouseDoublePressOnOverlay"],"description":"Triggered when a mouse double press event occurs on an overlay. Only occurs for 3D overlays."}},
	{"Overlays.mouseReleaseOnOverlay":{"prefix":"mouseReleaseOnOverlay","body":["mouseReleaseOnOverlay"],"description":"Triggered when a mouse release event occurs on an overlay. Only occurs for 3D overlays (unless you use \r    {@link Overlays.sendMouseReleaseOnOverlay|sendMouseReleaseOnOverlay} for a 2D overlay)."}},
	{"Overlays.mouseMoveOnOverlay":{"prefix":"mouseMoveOnOverlay","body":["mouseMoveOnOverlay"],"description":"Triggered when a mouse move event occurs on an overlay. Only occurs for 3D overlays (unless you use \r    {@link Overlays.sendMouseMoveOnOverlay|sendMouseMoveOnOverlay} for a 2D overlay)."}},
	{"Overlays.mousePressOffOverlay":{"prefix":"mousePressOffOverlay","body":["mousePressOffOverlay"],"description":"Triggered when a mouse press event occurs on something other than a 3D overlay."}},
	{"Overlays.mouseDoublePressOffOverlay":{"prefix":"mouseDoublePressOffOverlay","body":["mouseDoublePressOffOverlay"],"description":"Triggered when a mouse double press event occurs on something other than a 3D overlay."}},
	{"Overlays.hoverEnterOverlay":{"prefix":"hoverEnterOverlay","body":["hoverEnterOverlay"],"description":"Triggered when a mouse cursor starts hovering over an overlay. Only occurs for 3D overlays (unless you use \r    {@link Overlays.sendHoverEnterOverlay|sendHoverEnterOverlay} for a 2D overlay)."}},
	{"Overlays.hoverOverOverlay":{"prefix":"hoverOverOverlay","body":["hoverOverOverlay"],"description":"Triggered when a mouse cursor continues hovering over an overlay. Only occurs for 3D overlays (unless you use \r    {@link Overlays.sendHoverOverOverlay|sendHoverOverOverlay} for a 2D overlay)."}},
	{"Overlays.hoverLeaveOverlay":{"prefix":"hoverLeaveOverlay","body":["hoverLeaveOverlay"],"description":"Triggered when a mouse cursor finishes hovering over an overlay. Only occurs for 3D overlays (unless you use \r    {@link Overlays.sendHoverLeaveOverlay|sendHoverLeaveOverlay} for a 2D overlay)."}},
	{"Overlays.Rectangle3DProperties":{"prefix":"Rectangle3DProperties","body":["Rectangle3DProperties"],"description":"These are the properties of a <code>rectangle3d</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.RectangleProperties":{"prefix":"RectangleProperties","body":["RectangleProperties"],"description":"These are the properties of a <code>rectangle</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.ShapeProperties":{"prefix":"ShapeProperties","body":["ShapeProperties"],"description":"These are the properties of a <code>shape</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.SphereProperties":{"prefix":"SphereProperties","body":["SphereProperties"],"description":"These are the properties of a <code>sphere</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.Text3DProperties":{"prefix":"Text3DProperties","body":["Text3DProperties"],"description":"These are the properties of a <code>text3d</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.TextProperties":{"prefix":"TextProperties","body":["TextProperties"],"description":"These are the properties of a <code>text</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Overlays.Web3DProperties":{"prefix":"Web3DProperties","body":["Web3DProperties"],"description":"These are the properties of a <code>web3d</code> {@link Overlays.OverlayType|OverlayType}."}},
	{"Picks":{"prefix":"Picks","body":["Picks"],"description":"The Picks API lets you create and manage objects for repeatedly calculating intersections in different ways."}},
	{"Picks.PickProperties":{"prefix":"PickProperties","body":["PickProperties"],"description":"A set of properties that can be passed to {@link Picks.createPick} to create a new Pick.\r\rDifferent {@link Picks.PickType}s use different properties, and within one PickType, the properties you choose can lead to a wide range of behaviors.  For example,\r  with PickType.Ray, depending on which optional parameters you pass, you could create a Static Ray Pick, a Mouse Ray Pick, or a Joint Ray Pick."}},
	{"Picks.createPick":{"prefix":"createPick","body":["createPick"],"description":"Adds a new Pick."}},
	{"Picks.enablePick":{"prefix":"enablePick","body":["enablePick"],"description":"Enables a Pick."}},
	{"Picks.disablePick":{"prefix":"disablePick","body":["disablePick"],"description":"Disables a Pick."}},
	{"Picks.removePick":{"prefix":"removePick","body":["removePick"],"description":"Removes a Pick."}},
	{"Picks.RayPickResult":{"prefix":"RayPickResult","body":["RayPickResult"],"description":"An intersection result for a Ray Pick."}},
	{"Picks.StylusPickResult":{"prefix":"StylusPickResult","body":["StylusPickResult"],"description":"An intersection result for a Stylus Pick."}},
	{"Picks.getPrevPickResult":{"prefix":"getPrevPickResult","body":["getPrevPickResult"],"description":"Get the most recent pick result from this Pick.  This will be updated as long as the Pick is enabled."}},
	{"Picks.setPrecisionPicking":{"prefix":"setPrecisionPicking","body":["setPrecisionPicking"],"description":"Sets whether or not to use precision picking."}},
	{"Picks.setIgnoreItems":{"prefix":"setIgnoreItems","body":["setIgnoreItems"],"description":"Sets a list of Entity IDs, Overlay IDs, and/or Avatar IDs to ignore during intersection.  Not used by Stylus Picks."}},
	{"Picks.setIncludeItems":{"prefix":"setIncludeItems","body":["setIncludeItems"],"description":"Sets a list of Entity IDs, Overlay IDs, and/or Avatar IDs to include during intersection, instead of intersecting with everything.  Stylus\r  Picks <b>only</b> intersect with objects in their include list."}},
	{"Picks.isLeftHand":{"prefix":"isLeftHand","body":["isLeftHand"],"description":"Check if a Pick is associated with the left hand."}},
	{"Picks.isRightHand":{"prefix":"isRightHand","body":["isRightHand"],"description":"Check if a Pick is associated with the right hand."}},
	{"Picks.isMouse":{"prefix":"isMouse","body":["isMouse"],"description":"Check if a Pick is associated with the system mouse."}},
	{"Pointers":{"prefix":"Pointers","body":["Pointers"],"description":"The Pointers API lets you create and manage objects for repeatedly calculating intersections in different ways, as well as the visual representation of those objects.\r Pointers can also be configured to automatically generate PointerEvents."}},
	{"Pointers.PointerProperties":{"prefix":"PointerProperties","body":["PointerProperties"],"description":"A set of properties that can be passed to {@link Pointers.createPointer} to create a new Pointer.  Also contains the relevant {@link Picks.PickProperties} to define the underlying Pick.\r\rDifferent {@link PickType}s use different properties, and within one PickType, the properties you choose can lead to a wide range of behaviors.  For example,\r  with PickType.Ray, depending on which optional parameters you pass, you could create a Static Ray Pointer, a Mouse Ray Pointer, or a Joint Ray Pointer."}},
	{"Pointers.RayPointerRenderState":{"prefix":"RayPointerRenderState","body":["RayPointerRenderState"],"description":"A set of properties used to define the visual aspect of a Ray Pointer in the case that the Pointer is intersecting something."}},
	{"Pointers.DefaultRayPointerRenderState":{"prefix":"DefaultRayPointerRenderState","body":["DefaultRayPointerRenderState"],"description":"A set of properties used to define the visual aspect of a Ray Pointer in the case that the Pointer is not intersecting something.  Same as a {@link Pointers.RayPointerRenderState},\rbut with an additional distance field."}},
	{"Pointers.Trigger":{"prefix":"Trigger","body":["Trigger"],"description":"A trigger mechanism for Ray Pointers."}},
	{"Pointers.createPointer":{"prefix":"createPointer","body":["createPointer"],"description":"Adds a new Pointer"}},
	{"Pointers.enablePointer":{"prefix":"enablePointer","body":["enablePointer"],"description":"Enables a Pointer."}},
	{"Pointers.disablePointer":{"prefix":"disablePointer","body":["disablePointer"],"description":"Disables a Pointer."}},
	{"Pointers.removePointer":{"prefix":"removePointer","body":["removePointer"],"description":"Removes a Pointer."}},
	{"Pointers.editRenderState":{"prefix":"editRenderState","body":["editRenderState"],"description":"Edit some visual aspect of a Pointer.  Currently only supported for Ray Pointers."}},
	{"Pointers.setRenderState":{"prefix":"setRenderState","body":["setRenderState"],"description":"Set the render state of a Pointer.  For Ray Pointers, this means switching between their {@link Pointers.RayPointerRenderState}s, or \"\" to turn off rendering and hover/trigger events.\r For Stylus Pointers, there are three built-in options: \"events on\" (render and send events, the default), \"events off\" (render but don't send events), and \"disabled\" (don't render, don't send events)."}},
	{"Pointers.getPrevPickResult":{"prefix":"getPrevPickResult","body":["getPrevPickResult"],"description":"Get the most recent pick result from this Pointer.  This will be updated as long as the Pointer is enabled, regardless of the render state."}},
	{"Pointers.setPrecisionPicking":{"prefix":"setPrecisionPicking","body":["setPrecisionPicking"],"description":"Sets whether or not to use precision picking."}},
	{"Pointers.setLength":{"prefix":"setLength","body":["setLength"],"description":"Sets the length of this Pointer.  No effect on Stylus Pointers."}},
	{"Pointers.setIgnoreItems":{"prefix":"setIgnoreItems","body":["setIgnoreItems"],"description":"Sets a list of Entity IDs, Overlay IDs, and/or Avatar IDs to ignore during intersection.  Not used by Stylus Pointers."}},
	{"Pointers.setIncludeItems":{"prefix":"setIncludeItems","body":["setIncludeItems"],"description":"Sets a list of Entity IDs, Overlay IDs, and/or Avatar IDs to include during intersection, instead of intersecting with everything.  Stylus\r  Pointers <b>only</b> intersect with objects in their include list."}},
	{"Pointers.setLockEndUUID":{"prefix":"setLockEndUUID","body":["setLockEndUUID"],"description":"Lock a Pointer onto a specific object (overlay, entity, or avatar).  Optionally, provide an offset in object-space, otherwise the Pointer will lock on to the center of the object.\r  Not used by Stylus Pointers."}},
	{"Pointers.isLeftHand":{"prefix":"isLeftHand","body":["isLeftHand"],"description":"Check if a Pointer is associated with the left hand."}},
	{"Pointers.isRightHand":{"prefix":"isRightHand","body":["isRightHand"],"description":"Check if a Pointer is associated with the right hand."}},
	{"Pointers.isMouse":{"prefix":"isMouse","body":["isMouse"],"description":"Check if a Pointer is associated with the system mouse."}},
	{"AnimationCache":{"prefix":"AnimationCache","body":["AnimationCache"]}},
	{"AnimationCache.getAnimation":{"prefix":"getAnimation","body":["getAnimation"],"description":"Returns animation resource for particular animation"}},
	{"AvatarData.getDomainMinScale":{"prefix":"getDomainMinScale","body":["getDomainMinScale"],"description":"returns the minimum scale allowed for this avatar in the current domain.\rThis value can change as the user changes avatars or when changing domains."}},
	{"AvatarData.getDomainMaxScale":{"prefix":"getDomainMaxScale","body":["getDomainMaxScale"],"description":"returns the maximum scale allowed for this avatar in the current domain.\rThis value can change as the user changes avatars or when changing domains."}},
	{"AvatarData.getEyeHeight":{"prefix":"getEyeHeight","body":["getEyeHeight"],"description":"Provides read only access to the current eye height of the avatar.\rThis height is only an estimate and might be incorrect for avatars that are missing standard joints."}},
	{"AvatarData.getHeight":{"prefix":"getHeight","body":["getHeight"],"description":"Provides read only access to the current height of the avatar.\rThis height is only an estimate and might be incorrect for avatars that are missing standard joints."}},
	{"Entities":{"prefix":"Entities","body":["Entities"]}},
	{"Entities.canAdjustLocks":{"prefix":"canAdjustLocks","body":["canAdjustLocks"],"description":"Returns `true` if the DomainServer will allow this Node/Avatar to make changes"}},
	{"Entities.canRez":{"prefix":"canRez","body":["canRez"]}},
	{"Entities.canRezTmp":{"prefix":"canRezTmp","body":["canRezTmp"]}},
	{"Entities.canRezCertified":{"prefix":"canRezCertified","body":["canRezCertified"]}},
	{"Entities.canRezTmpCertified":{"prefix":"canRezTmpCertified","body":["canRezTmpCertified"]}},
	{"Entities.canWriteAssets":{"prefix":"canWriteAssets","body":["canWriteAssets"]}},
	{"Entities.addEntity":{"prefix":"addEntity","body":["addEntity"],"description":"Add a new entity with the specified properties. If `clientOnly` is true, the entity will\rnot be sent to the server and will only be visible/accessible on the local client."}},
	{"Entities.editEntity":{"prefix":"editEntity","body":["editEntity"],"description":"Updates an entity with the specified properties."}},
	{"Entities.deleteEntity":{"prefix":"deleteEntity","body":["deleteEntity"],"description":"Deletes an entity."}},
	{"Entities.callEntityMethod":{"prefix":"callEntityMethod","body":["callEntityMethod"],"description":"Call a method on an entity in the same context as this function is called. Allows a script \rto call a method on an entity's script. The method will execute in the entity script engine. \rIf the entity does not have an  entity script or the method does not exist, this call will \rhave no effect. If it is running an entity script (specified by the `script` property)\rand it exposes a property with the specified name `method`, it will be called\rusing `params` as the list of arguments. If this is called within an entity script, the\rmethod will be executed on the client in the entity script engine in which it was called. If\rthis is called in an entity server script, the method will be executed on the entity server \rscript engine."}},
	{"Entities.callEntityServerMethod":{"prefix":"callEntityServerMethod","body":["callEntityServerMethod"],"description":"Call a server method on an entity. Allows a client entity script to call a method on an \rentity's server script. The method will execute in the entity server script engine. If \rthe entity does not have an entity server script or the method does not exist, this call will \rhave no effect. If the entity is running an entity script (specified by the `serverScripts` property)\rand it exposes a property with the specified name `method`, it will be called using `params` as \rthe list of arguments."}},
	{"Entities.callEntityClientMethod":{"prefix":"callEntityClientMethod","body":["callEntityClientMethod"],"description":"Call a client method on an entity on a specific client node. Allows a server entity script to call a \rmethod on an entity's client script for a particular client. The method will execute in the entity script \rengine on that single client. If the entity does not have an entity script or the method does not exist, or\rthe client is not connected to the domain, or you attempt to make this call outside of the entity server \rscript, this call will have no effect."}},
	{"Entities.findClosestEntity":{"prefix":"findClosestEntity","body":["findClosestEntity"],"description":"finds the closest model to the center point, within the radius\rwill return a EntityItemID.isKnownID = false if no models are in the radius\rthis function will not find any models in script engine contexts which don't have access to models"}},
	{"Entities.queryPropertyMetadata":{"prefix":"queryPropertyMetadata","body":["queryPropertyMetadata"],"description":"Query additional metadata for \"magic\" Entity properties like `script` and `serverScripts`."}},
	{"Entities.queryPropertyMetadata":{"prefix":"queryPropertyMetadata","body":["queryPropertyMetadata"],"description":"Query additional metadata for \"magic\" Entity properties like `script` and `serverScripts`."}},
	{"Entities.getEntityTransform":{"prefix":"getEntityTransform","body":["getEntityTransform"],"description":"Returns object to world transform, excluding scale"}},
	{"Entities.getEntityLocalTransform":{"prefix":"getEntityLocalTransform","body":["getEntityLocalTransform"],"description":"Returns object to world transform, excluding scale"}},
	{"location":{"prefix":"location","body":["location"],"description":"The location API provides facilities related to your current location in the metaverse."}},
	{"location.protocolVersion":{"prefix":"protocolVersion","body":["protocolVersion"],"description":"Get Interface's protocol version."}},
	{"location.LookupTrigger":{"prefix":"LookupTrigger","body":["LookupTrigger"],"description":"<p>The reasons for an address lookup via the metaverse API are defined by numeric values:</p>\r<table>\r  <thead>\r    <tr>\r      <th>Name</th>\r      <th>Value</th>\r      <th>Description</th>\r    </tr>\r  </thead>\r  <tbody>\r    <tr>\r      <td><strong>UserInput</strong></td>\r      <td><code>0</code></td>\r      <td>User-typed input.</td>\r    </tr>\r    <tr>\r      <td><strong>Back</strong></td>\r      <td><code>1</code></td>\r      <td>Address from a {@link location.goBack|goBack} call.</td>\r    </tr>\r    <tr>\r      <td><strong>Forward</strong></td>\r      <td><code>2</code></td>\r      <td>Address from a {@link location.goForward|goForward} call.</td>\r    </tr>\r    <tr>\r      <td><strong>StartupFromSettings</strong></td>\r      <td><code>3</code></td>\r      <td>Initial location at Interface start-up from settings.</td>\r    </tr>\r    <tr>\r      <td><strong>DomainPathResponse</strong></td>\r      <td><code>4</code></td>\r      <td>A named path in the domain.</td>\r    </tr>\r    <tr>\r      <td><strong>Internal</strong></td>\r      <td><code>5</code></td>\r      <td>An internal attempt to resolve an alternative path.</td>\r    </tr>\r    <tr>\r      <td><strong>AttemptedRefresh</strong></td>\r      <td><code>6</code></td>\r      <td>A refresh after connecting to a domain.</td>\r    </tr>\r    <tr>\r      <td><strong>Suggestions</strong></td>\r      <td><code>7</code></td>\r      <td>Address from the Goto dialog.</td>\r    </tr>\r    <tr>\r      <td><strong>VisitUserFromPAL</strong></td>\r      <td><code>8</code></td>\r      <td>User from the People dialog.</td>\r    </tr>\r  </tbody>\r</table>"}},
	{"location.handleLookupString":{"prefix":"handleLookupString","body":["handleLookupString"],"description":"Go to a specified metaverse address."}},
	{"location.goToViewpointForPath":{"prefix":"goToViewpointForPath","body":["goToViewpointForPath"],"description":"Go to a position and orientation resulting from a lookup for a named path in the domain (set in the domain server's \rsettings)."}},
	{"location.goBack":{"prefix":"goBack","body":["goBack"],"description":"Go back to the previous location in your navigation history, if there is one."}},
	{"location.goForward":{"prefix":"goForward","body":["goForward"],"description":"Go forward to the next location in your navigation history, if there is one."}},
	{"location.goToLocalSandbox":{"prefix":"goToLocalSandbox","body":["goToLocalSandbox"],"description":"Go to the local Sandbox server that's running on the same PC as Interface."}},
	{"location.goToEntry":{"prefix":"goToEntry","body":["goToEntry"],"description":"Go to the default \"welcome\" metaverse address."}},
	{"location.goToUser":{"prefix":"goToUser","body":["goToUser"],"description":"Go to the specified user's location."}},
	{"location.refreshPreviousLookup":{"prefix":"refreshPreviousLookup","body":["refreshPreviousLookup"],"description":"Refresh the current address, e.g., after connecting to a domain in order to position the user to the desired location."}},
	{"location.storeCurrentAddress":{"prefix":"storeCurrentAddress","body":["storeCurrentAddress"],"description":"Update your current metaverse location in Interface's {@link Settings} file as your last-known address. This can be used\rto ensure that you start up at that address if you exit Interface without a later address automatically being saved."}},
	{"location.copyAddress":{"prefix":"copyAddress","body":["copyAddress"],"description":"Copy your current metaverse address (i.e., <code>location.href</code> property value) to the OS clipboard."}},
	{"location.copyPath":{"prefix":"copyPath","body":["copyPath"],"description":"Copy your current metaverse location and orientation (i.e., <code>location.pathname</code> property value) to the OS \rclipboard."}},
	{"location.lookupShareableNameForDomainID":{"prefix":"lookupShareableNameForDomainID","body":["lookupShareableNameForDomainID"],"description":"Retrieve and remember the place name for the given domain ID if the place name is not already known."}},
	{"location.lookupResultsFinished":{"prefix":"lookupResultsFinished","body":["lookupResultsFinished"],"description":"Triggered when looking up the details of a metaverse user or location to go to has completed (successfully or\runsuccessfully)."}},
	{"location.lookupResultIsOffline":{"prefix":"lookupResultIsOffline","body":["lookupResultIsOffline"],"description":"Triggered when looking up the details of a metaverse user or location to go to has completed and the domain or user is \roffline."}},
	{"location.lookupResultIsNotFound":{"prefix":"lookupResultIsNotFound","body":["lookupResultIsNotFound"],"description":"Triggered when looking up the details of a metaverse user or location to go to has completed and the domain or user could\rnot be found."}},
	{"location.possibleDomainChangeRequired":{"prefix":"possibleDomainChangeRequired","body":["possibleDomainChangeRequired"],"description":"Triggered when a request is made to go to an IP address."}},
	{"location.possibleDomainChangeRequiredViaICEForID":{"prefix":"possibleDomainChangeRequiredViaICEForID","body":["possibleDomainChangeRequiredViaICEForID"],"description":"Triggered when a request is made to go to a named domain or user."}},
	{"location.locationChangeRequired":{"prefix":"locationChangeRequired","body":["locationChangeRequired"],"description":"Triggered when an attempt is made to send your avatar to a specified position on the current domain. For example, when\ryou change domains or enter a position to go to in the \"Goto\" dialog."}},
	{"location.pathChangeRequired":{"prefix":"pathChangeRequired","body":["pathChangeRequired"],"description":"Triggered when an attempt is made to send your avatar to a new named path on the domain (set in the domain server's\rsettings). For example, when you enter a \"/\" followed by the path's name in the \"GOTO\" dialog."}},
	{"location.hostChanged":{"prefix":"hostChanged","body":["hostChanged"],"description":"Triggered when you navigate to a new domain."}},
	{"location.goBackPossible":{"prefix":"goBackPossible","body":["goBackPossible"],"description":"Triggered when there's a change in whether or not there's a previous location that can be navigated to using\r{@link location.goBack|goBack}. (Reflects changes in the state of the \"Goto\" dialog's back arrow.)"}},
	{"location.goForwardPossible":{"prefix":"goForwardPossible","body":["goForwardPossible"],"description":"Triggered when there's a change in whether or not there's a forward location that can be navigated to using \r{@link location.goForward|goForward}. (Reflects changes in the state of the \"Goto\" dialog's forward arrow.)"}},
	{"Window.ConnectionRefusedReason":{"prefix":"ConnectionRefusedReason","body":["ConnectionRefusedReason"],"description":"<p>The reasons that you may be refused connection to a domain are defined by numeric values:</p>\r<table>\r  <thead>\r    <tr>\r      <th>Reason</th>\r      <th>Value</th>\r      <th>Description</th>\r    </tr>\r  </thead>\r  <tbody>\r    <tr>\r      <td><strong>Unknown</strong></td>\r      <td><code>0</code></td>\r      <td>Some unknown reason.</td>\r    </tr>\r    <tr>\r      <td><strong>ProtocolMismatch</strong></td>\r      <td><code>1</code></td>\r      <td>The communications protocols of the domain and your Interface are not the same.</td>\r    </tr>\r    <tr>\r      <td><strong>LoginError</strong></td>\r      <td><code>2</code></td>\r      <td>You could not be logged into the domain.</td>\r    </tr>\r    <tr>\r      <td><strong>NotAuthorized</strong></td>\r      <td><code>3</code></td>\r      <td>You are not authorized to connect to the domain.</td>\r    </tr>\r    <tr>\r      <td><strong>TooManyUsers</strong></td>\r      <td><code>4</code></td>\r      <td>The domain already has its maximum number of users.</td>\r    </tr>\r  </tbody>\r</table>"}},
	{"Resource":{"prefix":"Resource","body":["Resource"]}},
	{"Resource.State":{"prefix":"State","body":["State"]}},
	{"Resource#release":{"prefix":"release","body":["release"],"description":"Release this resource"}},
	{"Resource#progressChanged":{"prefix":"progressChanged","body":["progressChanged"],"description":"Signaled when download progress for this resource has changed"}},
	{"Resource#stateChanged":{"prefix":"stateChanged","body":["stateChanged"],"description":"Signaled when resource loading state has changed"}},
	{"ResourceCache":{"prefix":"ResourceCache","body":["ResourceCache"]}},
	{"ResourceCache.getNumTotalResources":{"prefix":"getNumTotalResources","body":["getNumTotalResources"],"description":"Returns the total number of resources"}},
	{"ResourceCache.getSizeTotalResources":{"prefix":"getSizeTotalResources","body":["getSizeTotalResources"],"description":"Returns the total size in bytes of all resources"}},
	{"ResourceCache.getNumCachedResources":{"prefix":"getNumCachedResources","body":["getNumCachedResources"],"description":"Returns the total number of cached resources"}},
	{"ResourceCache.getSizeCachedResources":{"prefix":"getSizeCachedResources","body":["getSizeCachedResources"],"description":"Returns the total size in bytes of cached resources"}},
	{"ResourceCache.getResourceList":{"prefix":"getResourceList","body":["getResourceList"],"description":"Returns list of all resource urls"}},
	{"ResourceCache.getResource":{"prefix":"getResource","body":["getResource"],"description":"Asynchronously loads a resource from the spedified URL and returns it."}},
	{"ResourceCache.prefetch":{"prefix":"prefetch","body":["prefetch"],"description":"Prefetches a resource."}},
	{"Picks.PickType":{"prefix":"PickType","body":["PickType"]}},
	{"Shape":{"prefix":"Shape","body":["Shape"],"description":"<p>{@link Entities} and {@link Overlays} may have the following geometrical shapes:</p>\r<table>\r  <thead>\r    <tr><th>Value</th><th>Description</th></tr>\r  </thead>\r  <tbody>\r    <tr><td><code>Line</code></td><td>A 1D line oriented in 3 dimensions.</td></tr>\r    <tr><td><code>Triangle</code></td><td>A triangular prism.</td></tr>\r    <tr><td><code>Quad</code></td><td>A 2D square oriented in 3 dimensions.</tr>\r    <tr><td><code>Hexagon</code></td><td>A hexagonal prism.</td></tr>\r    <tr><td><code>Octagon</code></td><td>An octagonal prism.</td></tr>\r    <tr><td><code>Circle</code></td><td>A 2D circle oriented in 3 dimensions.</td></td></tr>\r    <tr><td><code>Cube</code></td><td>A cube.</td></tr>\r    <tr><td><code>Sphere</code></td><td>A sphere.</td></tr>\r    <tr><td><code>Tetrahedron</code></td><td>A tetrahedron.</td></tr>\r    <tr><td><code>Octahedron</code></td><td>An octahedron.</td></tr>\r    <tr><td><code>Dodecahedron</code></td><td>A dodecahedron.</td></tr>\r    <tr><td><code>Icosahedron</code></td><td>An icosahedron.</td></tr>\r    <tr><td><code>Torus</code></td><td>A torus. <em>Not implemented.</em></td></tr>\r    <tr><td><code>Cone</code></td><td>A cone.</td></tr>\r    <tr><td><code>Cylinder</code></td><td>A cylinder.</td></tr>\r  </tbody>\r</table>"}},
	{"DebugDraw":{"prefix":"DebugDraw","body":["DebugDraw"],"description":"Helper functions to render ephemeral debug markers and lines.\rDebugDraw markers and lines are only visible locally, they are not visible by other users."}},
	{"DebugDraw.drawRay":{"prefix":"drawRay","body":["drawRay"],"description":"Draws a line in world space, but it will only be visible for a single frame."}},
	{"DebugDraw.addMarker":{"prefix":"addMarker","body":["addMarker"],"description":"Adds a debug marker to the world. This marker will be drawn every frame until it is removed with DebugDraw.removeMarker.\rThis can be called repeatedly to change the position of the marker."}},
	{"DebugDraw.removeMarker":{"prefix":"removeMarker","body":["removeMarker"],"description":"Removes debug marker from the world.  Once a marker is removed, it will no longer be visible."}},
	{"DebugDraw.addMyAvatarMarker":{"prefix":"addMyAvatarMarker","body":["addMyAvatarMarker"],"description":"Adds a debug marker to the world, this marker will be drawn every frame until it is removed with DebugDraw.removeMyAvatarMarker.\rThis can be called repeatedly to change the position of the marker."}},
	{"DebugDraw.removeMyAvatarMarker":{"prefix":"removeMyAvatarMarker","body":["removeMyAvatarMarker"],"description":"Removes debug marker from the world.  Once a marker is removed, it will no longer be visible"}},
	{"Paths":{"prefix":"Paths","body":["Paths"],"description":"The Paths API provides absolute paths to the scripts and resources directories."}},
	{"PointerEvent":{"prefix":"PointerEvent","body":["PointerEvent"],"description":"A PointerEvent defines a 2D or 3D mouse or similar pointer event."}},
	{"KeyboardModifiers":{"prefix":"KeyboardModifiers","body":["KeyboardModifiers"],"description":"<p>A KeyboardModifiers value is used to specify which modifier keys on the keyboard are pressed. The value is the sum \r(bitwise OR) of the relevant combination of values from the following table:</p>\r<table>\r  <thead>\r    <tr><th>Key</th><th>Hexadecimal value</th><th>Decimal value</th><th>Description</th></tr>\r  </thead>\r  <tbody>\r    <tr><td>Shift</td><td><code>0x02000000</code></td><td><code>33554432</code></td>\r        <td>A Shift key on the keyboard is pressed.</td></tr>\r    <tr><td>Control</td><td><code>0x04000000</code></td><td><code>67108864</code></td>\r        <td>A Control key on the keyboard is pressed.</td></tr>\r    <tr><td>Alt</td><td><code>0x08000000</code></td><td><code>134217728</code></td>\r        <td>An Alt key on the keyboard is pressed.</td></tr>\r    <tr><td>Meta</td><td><code>0x10000000</code></td><td><code>268435456</code></td>\r        <td>A Meta or Windows key on the keyboard is pressed.</td></tr>\r    <tr><td>Keypad</td><td><code>0x20000000</code></td><td><code>536870912</code></td>\r        <td>A keypad button is pressed.</td></tr>\r    <tr><td>Group</td><td><code>0x40000000</code></td><td><code>1073741824</code></td>\r        <td>X11 operating system only: An AltGr / Mode_switch key on the keyboard is pressed.</td></tr>\r  </tbody>\r</table>"}},
	{"Rect":{"prefix":"Rect","body":["Rect"],"description":"Defines a rectangular portion of an image or screen."}},
	{"Color":{"prefix":"Color","body":["Color"],"description":"An RGB color value."}},
	{"Size":{"prefix":"Size","body":["Size"],"description":"A 2D size value."}},
	{"PickRay":{"prefix":"PickRay","body":["PickRay"],"description":"A PickRay defines a vector with a starting point. It is used, for example, when finding entities or overlays that lie under a\rmouse click or intersect a laser beam."}},
	{"StylusTip":{"prefix":"StylusTip","body":["StylusTip"],"description":"A StylusTip defines the tip of a stylus."}},
	{"Camera.Mode":{"prefix":"Mode","body":["Mode"],"description":"<p>Camera modes affect the position of the camera and the controls for camera movement. The camera can be in one of the\rfollowing modes:</p>\r<table>\r  <thead>\r    <tr>\r      <th>Mode</th>\r      <th>String</th>\r      <th>Description</th>\r    </tr>\r  </thead>\r  <tbody>\r    <tr>\r      <td><strong>First&nbsp;Person</strong></td>\r      <td><code>\"first&nbsp;person\"</code></td>\r      <td>The camera is positioned such that you have the same view as your avatar. The camera moves and rotates with your\r      avatar.</td>\r    </tr>\r    <tr>\r      <td><strong>Third&nbsp;Person</strong></td>\r      <td><code>\"third&nbsp;person\"</code></td>\r      <td>The camera is positioned such that you have a view from just behind your avatar. The camera moves and rotates with\r      your avatar.</td>\r    </tr>\r    <tr>\r      <td><strong>Mirror</strong></td>\r      <td><code>\"mirror\"</code></td>\r      <td>The camera is positioned such that you are looking directly at your avatar. The camera moves and rotates with your \r      avatar.</td>\r    </tr>\r    <tr>\r      <td><strong>Independent</strong></td>\r      <td><code>\"independent\"</code></td>\r      <td>The camera's position and orientation don't change with your avatar movement. Instead, they can be set via \r      scripting.</td>\r    </tr>\r    <tr>\r      <td><strong>Entity</strong></td>\r      <td><code>\"entity\"</code></td>\r      <td>The camera's position and orientation are set to be the same as a specified entity's, and move with the entity as\r      it moves.\r    </tr>\r  </tbody>\r</table>"}},
	{"ViewFrustum":{"prefix":"ViewFrustum","body":["ViewFrustum"],"description":"A ViewFrustum has a \"keyhole\" shape: a regular frustum for stuff that is visible plus a central sphere for stuff that is\rnearby (for physics simulation)."}},
	{"Camera":{"prefix":"Camera","body":["Camera"],"description":"The Camera API provides access to the \"camera\" that defines your view in desktop and HMD display modes."}},
	{"Camera.getModeString":{"prefix":"getModeString","body":["getModeString"],"description":"Get the current camera mode. You can also get the mode using the <code>Camera.mode</code> property."}},
	{"Camera.setModeString":{"prefix":"setModeString","body":["setModeString"],"description":"Set the camera mode. You can also set the mode using the <code>Camera.mode</code> property."}},
	{"Camera.getPosition":{"prefix":"getPosition","body":["getPosition"],"description":"Get the current camera position. You can also get the position using the <code>Camera.position</code> property."}},
	{"Camera.setPosition":{"prefix":"setPosition","body":["setPosition"],"description":"Set the camera position. You can also set the position using the <code>Camera.position</code> property. Only works if the\r    camera is in independent mode."}},
	{"Camera.getOrientation":{"prefix":"getOrientation","body":["getOrientation"],"description":"Get the current camera orientation. You can also get the orientation using the <code>Camera.orientation</code> property."}},
	{"Camera.setOrientation":{"prefix":"setOrientation","body":["setOrientation"],"description":"Set the camera orientation. You can also set the orientation using the <code>Camera.orientation</code> property. Only\r    works if the camera is in independent mode."}},
	{"Camera.computePickRay":{"prefix":"computePickRay","body":["computePickRay"],"description":"Compute a {@link PickRay} based on the current camera configuration and the specified <code>x, y</code> position on the \r    screen. The {@link PickRay} can be used in functions such as {@link Entities.findRayIntersection} and \r    {@link Overlays.findRayIntersection}."}},
	{"Camera.lookAt":{"prefix":"lookAt","body":["lookAt"],"description":"Rotate the camera to look at the specified <code>position</code>. Only works if the camera is in independent mode."}},
	{"Camera.keepLookingAt":{"prefix":"keepLookingAt","body":["keepLookingAt"],"description":"Set the camera to continue looking at the specified <code>position</code> even while the camera moves. Only works if the \rcamera is in independent mode."}},
	{"Camera.stopLookingAt":{"prefix":"stopLookingAt","body":["stopLookingAt"],"description":"Stops the camera from continually looking at the position that was set with <code>Camera.keepLookingAt</code>."}},
	{"Camera.modeUpdated":{"prefix":"modeUpdated","body":["modeUpdated"],"description":"Triggered when the camera mode changes."}},
	{"Assets.GetOptions.ResponseType":{"prefix":"ResponseType","body":["ResponseType"],"description":"<p>Available <code>responseType</code> values for use with @{link Assets.getAsset} and @{link Assets.loadFromCache} configuration option. </p>\r<table>\r  <thead>\r    <tr><th>responseType</th><th>typeof response value</th></tr>\r  </thead>\r  <tbody>\r    <tr><td><code>\"text\"</code></td><td>contents returned as utf-8 decoded <code>String</code> value</td></tr>\r    <tr><td><code>\"arraybuffer\"</code></td><td>contents as a binary <code>ArrayBuffer</code> object</td></tr>\r    <tr><td><code>\"json\"</code></td><td>contents as a parsed <code>JSON</code> object</td></tr>\r  </tbody>\r</table>"}},
	{"Assets":{"prefix":"Assets","body":["Assets"]}},
	{"Assets.uploadData":{"prefix":"uploadData","body":["uploadData"],"description":"Upload content to the connected domain's asset server."}},
	{"Assets~uploadDataCallback":{"prefix":"uploadDataCallback","body":["uploadDataCallback"],"description":"Called when uploadData is complete"}},
	{"Assets.downloadData":{"prefix":"downloadData","body":["downloadData"],"description":"Download data from the connected domain's asset server."}},
	{"Assets~downloadDataCallback":{"prefix":"downloadDataCallback","body":["downloadDataCallback"],"description":"Called when downloadData is complete"}},
	{"Assets.setMapping":{"prefix":"setMapping","body":["setMapping"],"description":"Sets up a path to hash mapping within the connected domain's asset server"}},
	{"Assets~setMappingCallback":{"prefix":"setMappingCallback","body":["setMappingCallback"],"description":"Called when setMapping is complete"}},
	{"Assets.getMapping":{"prefix":"getMapping","body":["getMapping"],"description":"Look up a path to hash mapping within the connected domain's asset server"}},
	{"Assets~getMappingCallback":{"prefix":"getMappingCallback","body":["getMappingCallback"],"description":"Called when getMapping is complete."}},
	{"Assets.getAsset":{"prefix":"getAsset","body":["getAsset"],"description":"Request Asset data from the ATP Server"}},
	{"Assets.GetOptions":{"prefix":"GetOptions","body":["GetOptions"],"description":"A set of properties that can be passed to {@link Assets.getAsset}."}},
	{"Assets~getAssetCallback":{"prefix":"getAssetCallback","body":["getAssetCallback"],"description":"Called when Assets.getAsset is complete."}},
	{"Assets~getAssetResult":{"prefix":"getAssetResult","body":["getAssetResult"],"description":"Result value returned by {@link Assets.getAsset}."}},
	{"Assets.putAsset":{"prefix":"putAsset","body":["putAsset"],"description":"Upload Asset data to the ATP Server"}},
	{"Assets.PutOptions":{"prefix":"PutOptions","body":["PutOptions"],"description":"A set of properties that can be passed to {@link Assets.putAsset}."}},
	{"Assets~puttAssetCallback":{"prefix":"puttAssetCallback","body":["puttAssetCallback"],"description":"Called when Assets.putAsset is complete."}},
	{"Assets~putAssetResult":{"prefix":"putAssetResult","body":["putAssetResult"],"description":"Result value returned by {@link Assets.putAsset}."}},
	{"Menu.MenuItemProperties":{"prefix":"MenuItemProperties","body":["MenuItemProperties"],"description":"A set of properties that can be passed to {@link Menu.addMenuItem} to create a new menu item.\r\rIf none of <code>position</code>, <code>beforeItem</code>, <code>afterItem</code>, or <code>grouping</code> are specified, \rthe menu item will be placed at the end of the menu."}},
	{"Quat":{"prefix":"Quat","body":["Quat"],"description":"A quaternion value. See also the {@link Quat(0)|Quat} object."}},
	{"Quat(0)":{"prefix":"Quat","body":["Quat"],"description":"The Quat API provides facilities for generating and manipulating quaternions.\rQuaternions should be used in preference to Euler angles wherever possible because quaternions don't suffer from the problem\rof gimbal lock."}},
	{"Quat(0).multiply":{"prefix":"multiply","body":["multiply"],"description":"Multiply two quaternions."}},
	{"Quat(0).normalize":{"prefix":"normalize","body":["normalize"],"description":"Normalizes a quaternion."}},
	{"Quat(0).conjugate":{"prefix":"conjugate","body":["conjugate"],"description":"Calculate the conjugate of a quaternion. For a unit quaternion, its conjugate is the same as its \r    {@link Quat(0).inverse|Quat.inverse}."}},
	{"Quat(0).lookAt":{"prefix":"lookAt","body":["lookAt"],"description":"Calculate a camera orientation given eye position, point of interest, and \"up\" direction. The camera's negative z-axis is\rthe forward direction. The result has zero roll about its forward direction with respect to the given \"up\" direction."}},
	{"Quat(0).lookAtSimple":{"prefix":"lookAtSimple","body":["lookAtSimple"],"description":"Calculate a camera orientation given eye position and point of interest. The camera's negative z-axis is the forward \rdirection. The result has zero roll about its forward direction."}},
	{"Quat(0).rotationBetween":{"prefix":"rotationBetween","body":["rotationBetween"],"description":"Calculate the shortest rotation from a first vector onto a second."}},
	{"Quat(0).fromVec3Degrees":{"prefix":"fromVec3Degrees","body":["fromVec3Degrees"],"description":"Generate a quaternion from a {@link Vec3} of Euler angles in degrees."}},
	{"Quat(0).fromVec3Radians":{"prefix":"fromVec3Radians","body":["fromVec3Radians"],"description":"Generate a quaternion from a {@link Vec3} of Euler angles in radians."}},
	{"Quat(0).fromPitchYawRollDegrees":{"prefix":"fromPitchYawRollDegrees","body":["fromPitchYawRollDegrees"],"description":"Generate a quaternion from pitch, yaw, and roll values in degrees."}},
	{"Quat(0).fromPitchYawRollRadians":{"prefix":"fromPitchYawRollRadians","body":["fromPitchYawRollRadians"],"description":"Generate a quaternion from pitch, yaw, and roll values in radians."}},
	{"Quat(0).inverse":{"prefix":"inverse","body":["inverse"],"description":"Calculate the inverse of a quaternion. For a unit quaternion, its inverse is the same as its\r    {@link Quat(0).conjugate|Quat.conjugate}."}},
	{"Quat(0).getFront":{"prefix":"getFront","body":["getFront"],"description":"Get the \"front\" direction that the camera would face if its orientation was set to the quaternion value.\rThis is a synonym for {@link Quat(0).getForward|Quat.getForward}.\rThe High Fidelity camera has axes x = right, y = up, -z = forward."}},
	{"Quat(0).getForward":{"prefix":"getForward","body":["getForward"],"description":"Get the \"forward\" direction that the camera would face if its orientation was set to the quaternion value.\rThis is a synonym for {@link Quat(0).getFront|Quat.getFront}.\rThe High Fidelity camera has axes x = right, y = up, -z = forward."}},
	{"Quat(0).getRight":{"prefix":"getRight","body":["getRight"],"description":"Get the \"right\" direction that the camera would have if its orientation was set to the quaternion value.\rThe High Fidelity camera has axes x = right, y = up, -z = forward."}},
	{"Quat(0).getUp":{"prefix":"getUp","body":["getUp"],"description":"Get the \"up\" direction that the camera would have if its orientation was set to the quaternion value.\rThe High Fidelity camera has axes x = right, y = up, -z = forward."}},
	{"Quat(0).safeEulerAngles":{"prefix":"safeEulerAngles","body":["safeEulerAngles"],"description":"Calculate the Euler angles for the quaternion, in degrees. (The \"safe\" in the name signifies that the angle results will\rnot be garbage even when the rotation is particularly difficult to decompose with pitches around +/-90 degrees.)"}},
	{"Quat(0).angleAxis":{"prefix":"angleAxis","body":["angleAxis"],"description":"Generate a quaternion given an angle to rotate through and an axis to rotate about."}},
	{"Quat(0).axis":{"prefix":"axis","body":["axis"],"description":"Get the rotation axis for a quaternion."}},
	{"Quat(0).angle":{"prefix":"angle","body":["angle"],"description":"Get the rotation angle for a quaternion."}},
	{"Quat(0).mix":{"prefix":"mix","body":["mix"],"description":"Compute a spherical linear interpolation between two rotations, safely handling two rotations that are very similar.\rSee also, {@link Quat(0).slerp|Quat.slerp}."}},
	{"Quat(0).slerp":{"prefix":"slerp","body":["slerp"],"description":"Compute a spherical linear interpolation between two rotations, for rotations that are not very similar.\rSee also, {@link Quat(0).mix|Quat.mix}."}},
	{"Quat(0).squad":{"prefix":"squad","body":["squad"],"description":"Compute a spherical quadrangle interpolation between two rotations along a path oriented toward two other rotations.\rEquivalent to: <code>Quat.slerp(Quat.slerp(q1, q2, alpha), Quat.slerp(s1, s2, alpha), 2 * alpha * (1.0 - alpha))</code>."}},
	{"Quat(0).dot":{"prefix":"dot","body":["dot"],"description":"Calculate the dot product of two quaternions. The closer the quaternions are to each other the more non-zero the value is\r(either positive or negative). Identical unit rotations have a dot product of +/- 1."}},
	{"Quat(0).print":{"prefix":"print","body":["print"],"description":"Print to the program log a text label followed by a quaternion's pitch, yaw, and roll Euler angles."}},
	{"Quat(0).equal":{"prefix":"equal","body":["equal"],"description":"Test whether two quaternions are equal. <strong>Note:</strong> The quaternions must be exactly equal in order for \r<code>true</code> to be returned; it is often better to use {@link Quat(0).dot|Quat.dot} and test for closeness to +/-1."}},
	{"Quat(0).cancelOutRollAndPitch":{"prefix":"cancelOutRollAndPitch","body":["cancelOutRollAndPitch"],"description":"Cancels out the roll and pitch component of a quaternion so that its completely horizontal with a yaw pointing in the \rgiven quaternion's direction."}},
	{"Quat(0).cancelOutRoll":{"prefix":"cancelOutRoll","body":["cancelOutRoll"],"description":"Cancels out the roll component of a quaternion so that its horizontal axis is level."}},
	{"Uuid":{"prefix":"Uuid","body":["Uuid"],"description":"A UUID (Universally Unique IDentifier) is used to uniquely identify entities, overlays, avatars, and the like. It is\rrepresented in JavaScript as a string in the format, <code>{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</code>, where the \"n\"s are\rhexadecimal digits."}},
	{"Uuid.fromString":{"prefix":"fromString","body":["fromString"],"description":"Generates a UUID from a string representation of the UUID."}},
	{"Uuid.toString":{"prefix":"toString","body":["toString"],"description":"Generates a string representation of a UUID. However, because UUIDs are represented in JavaScript as strings, this is in\reffect a no-op."}},
	{"Uuid.generate":{"prefix":"generate","body":["generate"],"description":"Generate a new UUID."}},
	{"Uuid.isEqual":{"prefix":"isEqual","body":["isEqual"],"description":"Test whether two given UUIDs are equal."}},
	{"Uuid.isNull":{"prefix":"isNull","body":["isNull"],"description":"Test whether a given UUID is null."}},
	{"Uuid.print":{"prefix":"print","body":["print"],"description":"Print to the program log a text label followed by the UUID value."}},
	{"Users":{"prefix":"Users","body":["Users"]}},
	{"Users.ignore":{"prefix":"ignore","body":["ignore"],"description":"Ignore another user."}},
	{"Users.getIgnoreStatus":{"prefix":"getIgnoreStatus","body":["getIgnoreStatus"],"description":"Gets a bool containing whether you have ignored the given Avatar UUID."}},
	{"Users.personalMute":{"prefix":"personalMute","body":["personalMute"],"description":"Mute another user for you and you only."}},
	{"Users.requestPersonalMuteStatus":{"prefix":"requestPersonalMuteStatus","body":["requestPersonalMuteStatus"],"description":"Requests a bool containing whether you have personally muted the given Avatar UUID."}},
	{"Users.setAvatarGain":{"prefix":"setAvatarGain","body":["setAvatarGain"],"description":"Sets an avatar's gain for you and you only.\rUnits are Decibels (dB)"}},
	{"Users.getAvatarGain":{"prefix":"getAvatarGain","body":["getAvatarGain"],"description":"Gets an avatar's gain for you and you only."}},
	{"Users.kick":{"prefix":"kick","body":["kick"],"description":"Kick another user."}},
	{"Users.mute":{"prefix":"mute","body":["mute"],"description":"Mute another user for everyone."}},
	{"Users.getUsernameFromID":{"prefix":"getUsernameFromID","body":["getUsernameFromID"],"description":"Returns a string containing the username associated with the given Avatar UUID"}},
	{"Users.getCanKick":{"prefix":"getCanKick","body":["getCanKick"],"description":"Returns `true` if the DomainServer will allow this Node/Avatar to make kick"}},
	{"Users.toggleIgnoreRadius":{"prefix":"toggleIgnoreRadius","body":["toggleIgnoreRadius"],"description":"Toggle the state of the ignore in radius feature"}},
	{"Users.enableIgnoreRadius":{"prefix":"enableIgnoreRadius","body":["enableIgnoreRadius"],"description":"Enables the ignore radius feature."}},
	{"Users.disableIgnoreRadius":{"prefix":"disableIgnoreRadius","body":["disableIgnoreRadius"],"description":"Disables the ignore radius feature."}},
	{"Users.getIgnoreRadiusEnabled":{"prefix":"getIgnoreRadiusEnabled","body":["getIgnoreRadiusEnabled"],"description":"Returns `true` if the ignore in radius feature is enabled"}},
	{"Users.enteredIgnoreRadius":{"prefix":"enteredIgnoreRadius","body":["enteredIgnoreRadius"],"description":"Notifies scripts that another user has entered the ignore radius"}},
	{"Users.usernameFromIDReply":{"prefix":"usernameFromIDReply","body":["usernameFromIDReply"],"description":"Notifies scripts of the username and machine fingerprint associated with a UUID.\rUsername and machineFingerprint will be their default constructor output if the requesting user isn't an admin."}},
	{"Users.avatarDisconnected":{"prefix":"avatarDisconnected","body":["avatarDisconnected"],"description":"Notifies scripts that a user has disconnected from the domain"}},
	{"Vec2":{"prefix":"Vec2","body":["Vec2"],"description":"A 2-dimensional vector."}},
	{"Vec3":{"prefix":"Vec3","body":["Vec3"],"description":"A 3-dimensional vector."}},
	{"Vec4":{"prefix":"Vec4","body":["Vec4"],"description":"A 4-dimensional vector."}},
	{"package:undefined":{"body":[null]}}
            ]
        